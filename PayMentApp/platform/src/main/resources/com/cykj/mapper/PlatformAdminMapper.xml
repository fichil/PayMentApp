<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cykj.mapper.PlatformAdminMapper">
    <resultMap id="BaseResultMap" type="com.cykj.pojo.Admin">
        <!--@mbg.generated-->
        <!--@Table `admin`-->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="account" jdbcType="VARCHAR" property="account" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
        <result column="state" jdbcType="INTEGER" property="state" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="store_number" jdbcType="VARCHAR" property="storeNumber" />
        <result column="role_id" jdbcType="INTEGER" property="roleId" />
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, account, `password`, nickname, `state`, create_time, store_number, role_id
    </sql>


        <!--  管理员登陆-->
        <select id="login" resultType="com.cykj.pojo.Admin">
            select * from `admin` where #{account} = account and #{password} = password and role_id = 0
        </select>

    <!--   通过id获取管理信息-->
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List" />
        from `admin`
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from `admin`
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cykj.pojo.Admin" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into `admin` (account, `password`, nickname,
        `state`, create_time, store_number,
        role_id)
        values (#{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
        #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{storeNumber,jdbcType=VARCHAR},
        #{roleId,jdbcType=INTEGER})
    </insert>

    <!--      添加管理员 -->
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cykj.pojo.Admin" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into `admin`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="state != null">
                `state`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="storeNumber != null">
                store_number,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="storeNumber != null">
                #{storeNumber,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <!--   修改管理员信息 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.cykj.pojo.Admin">
        <!--@mbg.generated-->
        update `admin`
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                `state` = #{state,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="storeNumber != null">
                store_number = #{storeNumber,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cykj.pojo.Admin">
        <!--@mbg.generated-->
        update `admin`
        set account = #{account,jdbcType=VARCHAR},
        `password` = #{password,jdbcType=VARCHAR},
        nickname = #{nickname,jdbcType=VARCHAR},
        `state` = #{state,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        store_number = #{storeNumber,jdbcType=VARCHAR},
        role_id = #{roleId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectAllAdmin" resultMap="BaseResultMap">
        select * from `admin` where role_id = 0 and id != 1
    </select>

    <!--    查找所以管理员信息-->
    <select id="selectAdmin" resultMap="BaseResultMap">
        select * from `admin`
        <where>
            role_id = 0 and id != 1
            <if test="adminId != null and adminId != ''">
                AND id LIKE CONCAT('%', #{adminId}, '%')
            </if>
            <if test="nickname != null and nickname != ''">
                AND nickname LIKE CONCAT('%', #{nickname}, '%')
            </if>
            <if test="state != null">
                AND state = #{state}
            </if>
        </where>
    </select>

</mapper>
